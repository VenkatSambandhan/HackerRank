import java.util.*;
 
public class Solution{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int[] node = new int[N];
        for(int i=0;i<N;i++){
            node[i] = in.nextInt();
        }
        int[][] connect = new int[N-1][2];
        int[] diff = new int[N-1];
        for(int i=0;i<N-1;i++){
            connect[i][0] = in.nextInt();
            connect[i][1] = in.nextInt();
        }
        for(int i=0;i<N-1;i++){
            ArrayList<Integer> s0 = new ArrayList<Integer>();
            s0.add(connect[i][0]);
            int sum0 = 0;
             
            ArrayList<Integer> s1 = new ArrayList<Integer>();
            s1.add(connect[i][1]);
            int sum1 = 0;
             
            int count1 = 1;           
            while(count1<=s0.size()){
                for(int j=0;j<N-1;j++){
                    if(j==i) continue;
                    else{
                        if(s0.contains(connect[j][0])){
                            if(!s0.contains(connect[j][1])){
                                s0.add(connect[j][1]);
                            }
                        }
                        if(s0.contains(connect[j][1])){
                            if(!s0.contains(connect[j][0])){
                                s0.add(connect[j][0]);
                            }
                        }
                    }
                }
                count1++;
            }
             
            int count2 = 1;
            while(count2<=s1.size()){
                for(int j=0;j<N-1;j++){
                    if(j==i) continue;
                    else{
                        if(s1.contains(connect[j][0])){
                            if(!s1.contains(connect[j][1])){
                                s1.add(connect[j][1]);
                            }
                        }
                        if(s1.contains(connect[j][1])){
                            if(!s1.contains(connect[j][0])){
                                s1.add(connect[j][0]);
                            }
                        }
                    }
                }
                count2++;
            }
             
            for(int a:s0){
                sum0 += node[a-1];
            }
             
            for(int a:s1){
                sum1 += node[a-1];
            }           
            diff[i] = Math.abs(sum0-sum1);
        }
        Arrays.sort(diff);
        System.out.println(diff[0]);
    }
}